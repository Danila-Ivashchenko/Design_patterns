openapi: "3.0.0"
info:
  description: Набор методов для учёта предприятия
  version: 1.0.0
  title: RestApi

servers:
  - url: /api

paths:
  /api/osv:
    get:
      summary: Получть osv
      operationId: src.http.osv.router.get
      parameters:
        - in: query
          name: start_date
          description: дата начала периода
          required: true
          schema:
            type: string
        - in: query
          name: end_date
          description: дата конца периода
          required: true
          schema:
            type: string
        - in: query
          name: storage_id
          description: id склада
          required: false
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
        400:
          description: Ошибка валидации
        500:
          description: Ошибка на сервере
        default:
          description: Неизвестная ошибка
  /api/data/dump:
    post:
      summary: Сохранить данные
      operationId: src.http.data.router.dump_data
      requestBody:
        description: DTO сохранения
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DumpDTO'
      responses:
        200:
          description: OK
        400:
          description: Ошибка валидации
        404:
          description: Ошибка not found
        500:
          description: Ошибка на сервере
        default:
          description: Неизвестная ошибка
  /api/nomenclature:
    put:
      summary: Создать номенклатуру
      operationId: src.http.nomenclature.router.create_nomenclature
      requestBody:
        description: DTO создания
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateNomenclatureDTO'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
        400:
          description: Ошибка валидации
        404:
          description: Ошибка not found
        500:
          description: Ошибка на сервере
        default:
          description: Неизвестная ошибка
  /api/nomenclature/{id}:
    patch:
      summary: Обновить номенклатуру
      operationId: src.http.nomenclature.router.update_nomenclature
      parameters:
        - name: id
          in: path
          description: id номенклатуры
          required: true
          schema:
            type: string
      requestBody:
        description: DTO обновления
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateNomenclatureDTO'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
        400:
          description: Ошибка валидации
        500:
          description: Ошибка на сервере
        default:
          description: Неизвестная ошибка
    get:
      summary: Получить номенклатуру
      operationId: src.http.nomenclature.router.get_nomenclature_by_id
      parameters:
        - name: id
          in: path
          description: id номенклатуры
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
        400:
          description: Ошибка валидации
        500:
          description: Ошибка на сервере
        default:
          description: Неизвестная ошибка
    delete:
      summary: Удалить номенклатуру
      operationId: src.http.nomenclature.router.delete_nomenclature
      parameters:
        - name: id
          in: path
          description: id номенклатуры
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
        400:
          description: Ошибка валидации
        500:
          description: Ошибка на сервере
        default:
          description: Неизвестная ошибка
  /api/settings:
    get:
      summary: Получить настройки
      operationId: main.get_settings
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
        400:
          description: Ошибка валидации
        500:
          description: Ошибка на сервере
        default:
          description: Неизвестная ошибка
  /api/settings/date_block:
    post:
      summary: Обновить дату блокировки
      operationId: main.update_date_block
      requestBody:
        description: DTO модель для обновления settings.date_block
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDateBlockDTO'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
        400:
          description: Ошибка валидации
        500:
          description: Ошибка на сервере
        default:
          description: Неизвестная ошибка
  /api/storage/turnover:
    post:
      summary: Добавить фильтр для отчета по домену
      operationId: main.storage_turnover
      requestBody:
        description: DTO модель для фильтрации
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorageTurnoverDTO'
      responses:
        200:
          description: Фильтр успешно добавлен
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        400:
          description: Ошибка валидации
        500:
          description: Ошибка на сервере
        default:
          description: Неизвестная ошибка
  /data/{entity}:
    post:
      summary: Добавить фильтр для отчета по домену
      operationId: src.http.data.router.get_by_filter
      parameters:
        - name: entity
          in: path
          description: Тип юнита для отчета
          required: true
          schema:
            type: string
            enum:
              - recipe
              - nomenclature
              - nomenclature_group
              - measurement_unit
              - storage
              - storage_transaction
      requestBody:
        description: DTO модель для фильтрации
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterDTO'
      responses:
        200:
          description: Фильтр успешно добавлен
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        400:
          description: Ошибка валидации
        500:
          description: Ошибка на сервере
        default:
          description: Неизвестная ошибка
  /reports/formats:
    get:
      summary: Получить список форматов
      operationId: main.report_types
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
        500:
          description: Ошибка на сервере
        default:
          description: Неизвестная ошибка

  /reports/ranges/{report_type}/entity/{entity}:
    get:
      summary: Получить список единиц измерения
      operationId: main.get_report
      parameters:
        - name: report_type
          in: path
          description: Уникальный код формата
          required: true
          schema:
            type: integer
        - name: entity
          in: path
          description: Тип юнита для отчета
          required: true
          schema:
            type: string
            enum:
              - recipe
              - nomenclature
              - nomenclature_group
              - measurement_unit
              - storage
              - storage_transaction
      responses:
        200:
          description: OK
          content:
            text/plain:
              schema:
                type: string
        500:
          description: Ошибка на сервере
        default:
          description: Неизвестная ошибка

components:
  schemas:
    DumpDTO:
      type: object
      properties:
        filename:
          type: string
    UpdateNomenclatureDTO:
      type: object
      properties:
        name:
          type: string
        nomenclature_group_id:
          type: string
        measurement_unit_id:
          type: string
    CreateNomenclatureDTO:
      type: object
      properties:
        name:
          type: string
        nomenclature_group_id:
          type: string
        measurement_unit_id:
          type: string
    UpdateDateBlockDTO:
      type: object
      properties:
        value:
          type: integer
    StorageTurnoverDTO:
      type: object
      properties:
        filters:
          type: array
          items:
            $ref: '#/components/schemas/FilterEntry'
        start_time:
          type: integer
        end_time:
          type: integer
    FilterEntry:
      type: object
      properties:
        key:
          type: string
        value:
          oneOf:
            - type: string
            - type: number
            - type: boolean
            - type: array
        operation:
          type: integer
          enum:
            - 1
            - 2
            - 3
            - 4
            - 5
    FilterDTO:
      type: array
      items:
        $ref: '#/components/schemas/FilterEntry'