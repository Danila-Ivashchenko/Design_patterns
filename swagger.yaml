openapi: "3.0.0"
info:
  description: Набор методов для учёта предприятия
  version: 1.0.0
  title: RestApi

servers:
  - url: /api

paths:
  /api/storage/turnover:
    post:
      summary: Добавить фильтр для отчета по домену
      operationId: main.storage_turnover
      requestBody:
        description: DTO модель для фильтрации
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorageTurnoverDTO'
      responses:
        200:
          description: Фильтр успешно добавлен
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        400:
          description: Ошибка валидации
        500:
          description: Ошибка на сервере
        default:
          description: Неизвестная ошибка
  /data/{entity}:
    post:
      summary: Добавить фильтр для отчета по домену
      operationId: main.get_by_filter
      parameters:
        - name: entity
          in: path
          description: Тип юнита для отчета
          required: true
          schema:
            type: string
            enum:
              - recipe
              - nomenclature
              - nomenclature_group
              - measurement_unit
              - storage
              - storage_transaction
      requestBody:
        description: DTO модель для фильтрации
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterDTO'
      responses:
        200:
          description: Фильтр успешно добавлен
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        400:
          description: Ошибка валидации
        500:
          description: Ошибка на сервере
        default:
          description: Неизвестная ошибка
  /reports/formats:
    get:
      summary: Получить список форматов
      operationId: main.report_types
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
        500:
          description: Ошибка на сервере
        default:
          description: Неизвестная ошибка

  /reports/ranges/{report_type}/entity/{entity}:
    get:
      summary: Получить список единиц измерения
      operationId: main.get_report
      parameters:
        - name: report_type
          in: path
          description: Уникальный код формата
          required: true
          schema:
            type: integer
        - name: entity
          in: path
          description: Тип юнита для отчета
          required: true
          schema:
            type: string
            enum:
              - recipe
              - nomenclature
              - nomenclature_group
              - measurement_unit
              - storage
              - storage_transaction
      responses:
        200:
          description: OK
          content:
            text/plain:
              schema:
                type: string
        500:
          description: Ошибка на сервере
        default:
          description: Неизвестная ошибка

components:
  schemas:
    StorageTurnoverDTO:
      type: object
      properties:
        filters:
          type: array
          items:
            $ref: '#/components/schemas/FilterEntry'
        start_time:
          type: integer
        end_time:
          type: integer
    FilterEntry:
      type: object
      properties:
        key:
          type: string
        value:
          oneOf:
            - type: string
            - type: number
            - type: boolean
            - type: array
        operation:
          type: integer
          enum:
            - 1
            - 2
            - 3
            - 4
            - 5
    FilterDTO:
      type: array
      items:
        $ref: '#/components/schemas/FilterEntry'